{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","onReady","compareProducts","context","urls","$searchForm","$categoryTreeContainer","find","Url","parse","window","location","href","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","classifyForm","formSelector","options","$inputs","join","formFieldClass","each","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","getUrl","pathname","search","history","pushState","document","title","trigger","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","parseQueryParams","i","temp","split","queryParams","currentTarget","serialize","PageManager","updateCounterNav","counter","$link","urlContext","is","attr","compare","compareCounter","$compareLink","$checked","element","item","product","$clickedCompareLink","checked","index","indexOf","splice","decrementCounter","showAlertModal","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","assign","constants","VALID","decodeURI","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","replaceState"],"mappings":"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","file":"theme-bundle.chunk.12.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts(navigate = true) {\r\n        this.$productListingContainer.removeClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\r\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-product-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    showContent(navigate = true) {\r\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\r\n        this.$productListingContainer.addClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-content-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\r\n            this.showContent(false);\r\n        } else {\r\n            this.showProducts(false);\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $contentListingContainer = $('#search-results-content');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const $contentCount = $('#search-results-content-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'search/product-listing',\r\n                contentListing: 'search/content-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'search/heading',\r\n                productCount: 'search/product-count',\r\n                contentCount: 'search/content-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $searchHeading.html(content.heading);\r\n\r\n            const url = Url.parse(window.location.href, true);\r\n            if (url.query.section === 'content') {\r\n                $contentListingContainer.html(content.contentListing);\r\n                $contentCount.html(content.contentCount);\r\n                this.showContent(false);\r\n            } else {\r\n                $productListingContainer.html(content.productListing);\r\n                $facetedSearchContainer.html(content.sidebar);\r\n                $searchCount.html(content.productCount);\r\n                this.showProducts(false);\r\n            }\r\n\r\n            $('body').triggerHandler('compareReset');\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","const forms = {\r\n    email(value) {\r\n        const re = /^.+@.+\\..+/;\r\n        return re.test(value);\r\n    },\r\n\r\n    /**\r\n     * Validates a password field\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    password(value) {\r\n        return this.notEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * validates if a field is empty\r\n     * @param value\r\n     * @returns {boolean}\r\n     *\r\n     */\r\n    notEmpty(value) {\r\n        return value.length > 0;\r\n    },\r\n};\r\n\r\nexport default forms;\r\n","import _ from 'lodash';\r\nimport nod from './nod';\r\nimport forms from './models/forms';\r\n\r\nconst inputTagNames = [\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n];\r\n\r\n/**\r\n * Apply class name to an input element on its type\r\n * @param {object} input\r\n * @param {string} formFieldClass\r\n * @return {object} Element itself\r\n */\r\nfunction classifyInput(input, formFieldClass) {\r\n    const $input = $(input);\r\n    const $formField = $input.parent(`.${formFieldClass}`);\r\n    const tagName = $input.prop('tagName').toLowerCase();\r\n\r\n    let className = `${formFieldClass}--${tagName}`;\r\n    let specificClassName;\r\n\r\n    // Input can be text/checkbox/radio etc...\r\n    if (tagName === 'input') {\r\n        const inputType = $input.prop('type');\r\n\r\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\r\n            // ie: .form-field--checkbox, .form-field--radio\r\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\r\n        } else {\r\n            // ie: .form-field--input .form-field--inputText\r\n            specificClassName = `${className}${_.capitalize(inputType)}`;\r\n        }\r\n    }\r\n\r\n    // Apply class modifier\r\n    return $formField\r\n        .addClass(className)\r\n        .addClass(specificClassName);\r\n}\r\n\r\n/**\r\n * Apply class name to each input element in a form based on its type\r\n * @example\r\n * // Before\r\n * <form id=\"form\">\r\n *     <div class=\"form-field\">\r\n *         <input type=\"text\">\r\n *     </div>\r\n *     <div class=\"form-field\">\r\n *         <select>...</select>\r\n *     </div>\r\n * </form>\r\n *\r\n * classifyForm('#form', { formFieldClass: 'form-field' });\r\n *\r\n * // After\r\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\r\n * <div class=\"form-field form-field--select\">...</div>\r\n *\r\n * @param {string|object} formSelector - selector or element\r\n * @param {object} options\r\n * @return {jQuery} Element itself\r\n */\r\nexport function classifyForm(formSelector, options = {}) {\r\n    const $form = $(formSelector);\r\n    const $inputs = $form.find(inputTagNames.join(', '));\r\n\r\n    // Obtain options\r\n    const { formFieldClass = 'form-field' } = options;\r\n\r\n    // Classify each input in a form\r\n    $inputs.each((__, input) => {\r\n        classifyInput(input, formFieldClass);\r\n    });\r\n\r\n    return $form;\r\n}\r\n\r\n/**\r\n * Get id from given field\r\n * @param {object} $field JQuery field object\r\n * @return {string}\r\n */\r\nfunction getFieldId($field) {\r\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\r\n\r\n    if (fieldId && fieldId.length !== 0) {\r\n        return fieldId[0];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n * Insert hidden field after State/Province field\r\n * @param {object} $stateField JQuery field object\r\n */\r\nfunction insertStateHiddenField($stateField) {\r\n    const fieldId = getFieldId($stateField);\r\n    const stateFieldAttrs = {\r\n        type: 'hidden',\r\n        name: `FormFieldIsText${fieldId}`,\r\n        value: '1',\r\n    };\r\n\r\n    $stateField.after($('<input />', stateFieldAttrs));\r\n}\r\n\r\nconst Validators = {\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setEmailValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid email.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param validator\r\n     * @param passwordSelector\r\n     * @param password2Selector\r\n     * @param requirements\r\n     * @param isOptional\r\n     */\r\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\r\n        const $password = $(passwordSelector);\r\n        const passwordValidations = [\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.match(new RegExp(requirements.alpha))\r\n                        && val.match(new RegExp(requirements.numeric))\r\n                        && val.length >= requirements.minlength;\r\n\r\n                    // If optional and nothing entered, it is valid\r\n                    if (isOptional && val.length === 0) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: requirements.error,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val === $password.val();\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'Your passwords do not match.',\r\n            },\r\n        ];\r\n\r\n        validator.add(passwordValidations);\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param {Nod} validator\r\n     * @param {Object} selectors\r\n     * @param {string} selectors.errorSelector\r\n     * @param {string} selectors.fieldsetSelector\r\n     * @param {string} selectors.formSelector\r\n     * @param {string} selectors.maxPriceSelector\r\n     * @param {string} selectors.minPriceSelector\r\n     */\r\n    setMinMaxPriceValidation: (validator, selectors) => {\r\n        const {\r\n            errorSelector,\r\n            fieldsetSelector,\r\n            formSelector,\r\n            maxPriceSelector,\r\n            minPriceSelector,\r\n        } = selectors;\r\n\r\n        validator.configure({\r\n            form: formSelector,\r\n            preventSubmit: true,\r\n            successClass: '_', // KLUDGE: Don't apply success class\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: minPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: maxPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Max. price is required.',\r\n            selector: maxPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min. price is required.',\r\n            selector: minPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Input must be greater than 0.',\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            validate: 'min-number:0',\r\n        });\r\n\r\n        validator.setMessageOptions({\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            parent: fieldsetSelector,\r\n            errorSpan: errorSelector,\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setStateCountryValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: 'presence',\r\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes classes from dirty form if previously checked\r\n     * @param field\r\n     */\r\n    cleanUpStateValidation: (field) => {\r\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\r\n\r\n        Object.keys(nod.classes).forEach((value) => {\r\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\r\n                $fieldClassElement.removeClass(nod.classes[value]);\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport { Validators, insertStateHiddenField };\r\n","import Url from 'url';\r\n\r\nconst urlUtils = {\r\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\r\n\r\n    goToUrl: (url) => {\r\n        window.history.pushState({}, document.title, url);\r\n        $(window).trigger('statechange');\r\n    },\r\n\r\n    replaceParams: (url, params) => {\r\n        const parsed = Url.parse(url, true);\r\n        let param;\r\n\r\n        // Let the formatter use the query object to build the new url\r\n        parsed.search = null;\r\n\r\n        for (param in params) {\r\n            if (params.hasOwnProperty(param)) {\r\n                parsed.query[param] = params[param];\r\n            }\r\n        }\r\n\r\n        return Url.format(parsed);\r\n    },\r\n\r\n    buildQueryString: (queryData) => {\r\n        let out = '';\r\n        let key;\r\n        for (key in queryData) {\r\n            if (queryData.hasOwnProperty(key)) {\r\n                if (Array.isArray(queryData[key])) {\r\n                    let ndx;\r\n\r\n                    for (ndx in queryData[key]) {\r\n                        if (queryData[key].hasOwnProperty(ndx)) {\r\n                            out += `&${key}=${queryData[key][ndx]}`;\r\n                        }\r\n                    }\r\n                } else {\r\n                    out += `&${key}=${queryData[key]}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out.substring(1);\r\n    },\r\n\r\n    parseQueryParams: (queryData) => {\r\n        const params = {};\r\n\r\n        for (let i = 0; i < queryData.length; i++) {\r\n            const temp = queryData[i].split('=');\r\n\r\n            if (temp[0] in params) {\r\n                if (Array.isArray(params[temp[0]])) {\r\n                    params[temp[0]].push(temp[1]);\r\n                } else {\r\n                    params[temp[0]] = [params[temp[0]], temp[1]];\r\n                }\r\n            } else {\r\n                params[temp[0]] = temp[1];\r\n            }\r\n        }\r\n\r\n        return params;\r\n    },\r\n};\r\n\r\nexport default urlUtils;\r\n","import PageManager from './page-manager';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\n\r\nexport default class CatalogPage extends PageManager {\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { showAlertModal } from './modal';\r\n\r\nfunction decrementCounter(counter, item) {\r\n    const index = counter.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        counter.splice(index, 1);\r\n    }\r\n}\r\n\r\nfunction incrementCounter(counter, item) {\r\n    counter.push(item);\r\n}\r\n\r\nfunction updateCounterNav(counter, $link, urlContext) {\r\n    if (counter.length !== 0) {\r\n        if (!$link.is('visible')) {\r\n            $link.addClass('show');\r\n        }\r\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\r\n        $link.find('span.countPill').html(counter.length);\r\n    } else {\r\n        $link.removeClass('show');\r\n    }\r\n}\r\n\r\nexport default function (urlContext) {\r\n    let compareCounter = [];\r\n\r\n    const $compareLink = $('a[data-compare-nav]');\r\n\r\n    $('body').on('compareReset', () => {\r\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        compareCounter = $checked.length ? _.map($checked, element => element.value) : [];\r\n        updateCounterNav(compareCounter, $compareLink, urlContext);\r\n    });\r\n\r\n    $('body').triggerHandler('compareReset');\r\n\r\n    $('body').on('click', '[data-compare-id]', event => {\r\n        const product = event.currentTarget.value;\r\n        const $clickedCompareLink = $('a[data-compare-nav]');\r\n\r\n        if (event.currentTarget.checked) {\r\n            incrementCounter(compareCounter, product);\r\n        } else {\r\n            decrementCounter(compareCounter, product);\r\n        }\r\n\r\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\r\n    });\r\n\r\n    $('body').on('submit', '[data-product-compare]', event => {\r\n        const $this = $(event.currentTarget);\r\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if (productsToCompare.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    $('body').on('click', 'a[data-compare-nav]', () => {\r\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if ($clickedCheckedInput.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './url-utils';\r\nimport modalFactory from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './form-utils';\r\nimport nod from './nod';\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        const defaultOptions = {\r\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n            blockerSelector: '#facetedSearch .blocker',\r\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n            componentSelector: '#facetedSearch-navList',\r\n            facetNavListSelector: '#facetedSearch .navList',\r\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n            priceRangeFormSelector: '#facet-range-form',\r\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n            modal: modalFactory('#modal')[0],\r\n            modalOpen: false,\r\n        };\r\n\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(window).on('popstate', this.onPopState);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(window).off('popstate', this.onPopState);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onRangeSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href, true);\r\n        let queryParams = decodeURI($(event.currentTarget).serialize()).split('&');\r\n        queryParams = urlUtils.parseQueryParams(queryParams);\r\n\r\n        for (const key in queryParams) {\r\n            if (queryParams.hasOwnProperty(key)) {\r\n                url.query[key] = queryParams[key];\r\n            }\r\n        }\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n\r\n    onPopState() {\r\n        const currentUrl = window.location.href;\r\n        const searchParams = new URLSearchParams(currentUrl);\r\n        // If searchParams does not contain a page value then modify url query string to have page=1\r\n        if (!searchParams.has('page')) {\r\n            const linkUrl = $('.pagination-link').attr('href');\r\n            const re = /page=[0-9]+/i;\r\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\r\n            window.history.replaceState({}, document.title, updatedLinkUrl);\r\n        }\r\n        $(window).trigger('statechange');\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n"],"sourceRoot":""}